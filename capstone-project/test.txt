import boto3
import psycopg2

aws_access_key_id = "ASIAQUDH5D6C5UTN4V57"
aws_secret_access_key = "FC5fj8QEMlpBtJ7PoHZKhzXA21+HvxsEP+jkaFb8"
aws_session_token = "FwoGZXIvYXdzEIf//////////wEaDOUFMJFada95oYIK5yLNAbjW96oNgEOLy1s2yLqQ1M4ckdBXfWe1v/B6jXTx8ltJX9TDxaguz2IqUAJNNcEM3x7ke9MTizXWh5IbsIEW0YOOQwYq6/EiWUrhP3YMaAtmSyb2IT8d9VtMhdlB6YYkeeTUEnPXCGqShvgaFv+QzvFcay9wRhrkUUBA9liJcNni8VbiVpW46CQYcV1vQbQ8PNlhcTwS1mT82MnIjuL0UAf5RmCDa4A8FTWcQR2mdyVC+QyrNw4pVjJXloAOI9kvUILb1W8WgpC+EkDUnvQohoHbnAYyLY6nln1X1KHgYXDC5wWSqbHXoLQahokJmqMmXHlyH8kipa5v6/MDtAWF9r6rZQ=="


s3 = boto3.resource(
    "s3",
    aws_access_key_id=aws_access_key_id,
    aws_secret_access_key=aws_secret_access_key,
    aws_session_token=aws_session_token
)
s3.meta.client.upload_file(
    "hr-employee-attrition.csv",
    "gg-capstone",
    "hr-employee-attrition.csv",
)
s3.meta.client.get_object(
    Bucket = "gg-capstone",
    Key = "hr-employee-attrition.csv"
)

drop_table_queries = [
    "DROP TABLE IF EXISTS hr",
    "DROP TABLE IF EXISTS hr_emp"
]

create_table_queries = [
    """
    CREATE TABLE IF NOT EXISTS hr_emp (
        age text	,
        attrition	text,
        businesstravel	text,
        dailyrate text,
        department	text,
        distancefromhome	text,
        education	text,
        educationfield	text,
        employeecount	text,
        employeenumber	text,
        environmentsatisfaction	text,
        gender	text,
        hourlyrate	text,
        jobinvolvement	text,
        joblevel	text,
        jobrole	text,
        jobsatisfaction	text,
        maritalstatus	text,
        monthlyincome	text,
        monthlyrate	text,
        numcompaniesworked	text,
        over18	text,
        overtime	text,
        percentsalaryhike	text,
        performancerating	text,
        relationshipsatisfaction	text,
        standardhours	text,
        stockoptionlevel	text,
        totalworkingyears	text,
        trainingtimeslastyear	text,
        worklifebalance	text,
        yearsatcompany	text,
        yearsincurrentrole	text,
        yearssincelastpromotion	text,
        yearswithcurrmanager text

    )
    """,
    """
    CREATE TABLE IF NOT EXISTS hr (
        age text	,
        attrition	text,
        businesstravel	text
    )
    """
]

copy_table_queries = [
    """
    COPY hr_emp FROM 's3://gg-capstone/hr-employee-attrition.csv'
    ACCESS_KEY_ID 'ASIAQUDH5D6C5UTN4V57'
    SECRET_ACCESS_KEY 'FC5fj8QEMlpBtJ7PoHZKhzXA21+HvxsEP+jkaFb8'
    SESSION_TOKEN 'FwoGZXIvYXdzEIf//////////wEaDOUFMJFada95oYIK5yLNAbjW96oNgEOLy1s2yLqQ1M4ckdBXfWe1v/B6jXTx8ltJX9TDxaguz2IqUAJNNcEM3x7ke9MTizXWh5IbsIEW0YOOQwYq6/EiWUrhP3YMaAtmSyb2IT8d9VtMhdlB6YYkeeTUEnPXCGqShvgaFv+QzvFcay9wRhrkUUBA9liJcNni8VbiVpW46CQYcV1vQbQ8PNlhcTwS1mT82MnIjuL0UAf5RmCDa4A8FTWcQR2mdyVC+QyrNw4pVjJXloAOI9kvUILb1W8WgpC+EkDUnvQohoHbnAYyLY6nln1X1KHgYXDC5wWSqbHXoLQahokJmqMmXHlyH8kipa5v6/MDtAWF9r6rZQ=='
    CSV
    DELIMITER ',' 
    IGNOREHEADER 1 
    """
]
insert_table_queries = [
    """
    INSERT INTO
      hr (
        age,
        attrition,
        businesstravel 
      )
    SELECT
        age,
        attrition,
        businesstravel
    FROM
      hr_emp
    """,
]


def drop_tables(cur, conn):
    for query in drop_table_queries:
        cur.execute(query)
        conn.commit()


def create_tables(cur, conn):
    for query in create_table_queries:
        cur.execute(query)
        conn.commit()


def load_tables(cur, conn):
    for query in copy_table_queries:
        cur.execute(query)
        conn.commit()


def insert_tables(cur, conn):
    for query in insert_table_queries:
        cur.execute(query)
        conn.commit()


def main():
    host = "redshift-cluster-2.cgpttgasm2sh.us-east-1.redshift.amazonaws.com"
    dbname = "dev"
    user = "awsuser"
    password = "Gogie1234"
    port = "5439"
    conn_str = f"host={host} dbname={dbname} user={user} password={password} port={port}"
    conn = psycopg2.connect(conn_str)
    cur = conn.cursor()

    drop_tables(cur, conn)
    create_tables(cur, conn)
    load_tables(cur, conn)
    insert_tables(cur, conn)

    query = "select * from hr_emp"
    cur.execute(query)
    records = cur.fetchall()
    for row in records:
        print(row)

    conn.close()


if __name__ == "__main__":
    main()